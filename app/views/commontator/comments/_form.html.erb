<% # Clients of this partial must provide the following variables:
   # comment
   #
   # Optionally, they can also supply the following variables:
   per_page ||= nil
   thread ||= nil
   no_remote ||= false
%>

<% config = comment.thread.config %>

<% if comment.errors.any? %>
  <div class="alert alert-danger">
  <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <b><%= t "commontator.comment.errors.#{comment.id.blank? ? 'create' : 'update'}" %></b>
    <% comment.errors.full_messages.each do |msg| %>
      <%= msg + '. '%>
    <% end %>
  </div>
<% end %>

<%= form_for([commontator, thread, comment],
             :remote => !no_remote) do |f| %>

  <%= hidden_field_tag :per_page, per_page %>
  
  <div class="field form-group">
    <%= f.text_area :body, :rows => '6', class: "form-control" %>
    <%= javascript_tag('Commontator.initMentions()') if Commontator.mentions_enabled %>
  </div>
  
  <div class="btn-group btn-group-sm" role="group" aria-label="...">
    <%= f.submit t("commontator.comment.actions.#{comment.id.blank? ? 'create' : 'update'}"), class: 'btn btn-success' %>
    <%= f.submit t('commontator.comment.actions.cancel'), :name => 'cancel', class: 'btn btn-default' %>
  </div>

<% end %>
